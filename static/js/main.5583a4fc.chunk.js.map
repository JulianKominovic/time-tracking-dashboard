{"version":3,"sources":["data.js","context/ContextDataType.js","components/Card.jsx","components/TallCard.jsx","components/CardContainer.jsx","App.js","index.js"],"names":["testData","title","timeframes","daily","current","previous","weekly","monthly","Context","React","createContext","DataTypeProvider","children","useState","currentDataType","setCurrentDataType","Provider","value","Container","styled","article","CardTop","main","props","bg","CardBody","header","IconTopRight","img","Title","h1","Hours","h2","CardBodyHeader","Button","button","ButtonImage","SmallText","small","HoursContainer","div","COLORS","Card","itemIndex","useContext","ContextDataType","cardImageSvg","toLowerCase","replace","src","CardContainer","CardUserInfo","CardUserImg","CardReportText","CardUserName","CardDataSection","CardDataOption","opacity","TallCard","gridPosition","gridPos","map","item","onClick","CardGrid","section","index","MainBody","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5583a4fc.chunk.js","sourcesContent":["export const testData = [\n  {\n    title: \"Work\",\n    timeframes: {\n      daily: {\n        current: 5,\n        previous: 7,\n      },\n      weekly: {\n        current: 32,\n        previous: 36,\n      },\n      monthly: {\n        current: 103,\n        previous: 128,\n      },\n    },\n  },\n  {\n    title: \"Play\",\n    timeframes: {\n      daily: {\n        current: 1,\n        previous: 2,\n      },\n      weekly: {\n        current: 10,\n        previous: 8,\n      },\n      monthly: {\n        current: 23,\n        previous: 29,\n      },\n    },\n  },\n  {\n    title: \"Study\",\n    timeframes: {\n      daily: {\n        current: 0,\n        previous: 1,\n      },\n      weekly: {\n        current: 4,\n        previous: 7,\n      },\n      monthly: {\n        current: 13,\n        previous: 19,\n      },\n    },\n  },\n  {\n    title: \"Exercise\",\n    timeframes: {\n      daily: {\n        current: 1,\n        previous: 1,\n      },\n      weekly: {\n        current: 4,\n        previous: 5,\n      },\n      monthly: {\n        current: 11,\n        previous: 18,\n      },\n    },\n  },\n  {\n    title: \"Social\",\n    timeframes: {\n      daily: {\n        current: 1,\n        previous: 3,\n      },\n      weekly: {\n        current: 5,\n        previous: 10,\n      },\n      monthly: {\n        current: 21,\n        previous: 23,\n      },\n    },\n  },\n  {\n    title: \"Self Care\",\n    timeframes: {\n      daily: {\n        current: 0,\n        previous: 1,\n      },\n      weekly: {\n        current: 2,\n        previous: 2,\n      },\n      monthly: {\n        current: 7,\n        previous: 11,\n      },\n    },\n  },\n];\n","import React, { useState } from \"react\";\r\n\r\nconst Context = React.createContext({});\r\n\r\nexport function DataTypeProvider({ children }) {\r\n  const [currentDataType, setCurrentDataType] = useState(\"Daily\");\r\n  return (\r\n    <Context.Provider value={{ currentDataType, setCurrentDataType }}>\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n}\r\nexport default Context;\r\n","import React from \"react\";\r\nimport { useContext } from \"react/cjs/react.development\";\r\nimport styled from \"styled-components\";\r\nimport ContextDataType from \"../context/ContextDataType\";\r\nconst Container = styled.article`\r\n  position: relative;\r\n  @media screen and (max-width: 1023px) {\r\n    height: 150px;\r\n  }\r\n`;\r\n\r\nconst CardTop = styled.main`\r\n  position: relative;\r\n  height: 100%;\r\n  background-color: ${(props) => props.bg};\r\n  border-radius: 18px;\r\n  overflow: hidden;\r\n\r\n  @media screen and (max-width: 1023px) {\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nconst CardBody = styled.header`\r\n  position: absolute;\r\n  border-radius: 18px;\r\n  bottom: -1px;\r\n  left: -1px;\r\n  border: 1px solid #1d204b;\r\n  height: 80%;\r\n  width: 80%;\r\n  background-color: #1d204b;\r\n  padding: 0 10%;\r\n  cursor: pointer;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n\r\n  &:hover {\r\n    background-color: #34397b;\r\n    border: 1px solid #34397b;\r\n  }\r\n\r\n  @media screen and (max-width: 1023px) {\r\n    justify-content: space-evenly;\r\n  }\r\n`;\r\n\r\nconst IconTopRight = styled.img`\r\n  position: absolute;\r\n  top: -2%;\r\n  right: 6%;\r\n\r\n  object-fit: cover;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: white;\r\n\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Hours = styled.h2`\r\n  color: white;\r\n\r\n  font-size: 48px;\r\n  font-weight: 300;\r\n`;\r\n\r\nconst CardBodyHeader = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  &:hover {\r\n    filter: brightness(10);\r\n  }\r\n`;\r\n\r\nconst ButtonImage = styled.img``;\r\n\r\nconst SmallText = styled.small`\r\n  color: white;\r\n  opacity: 0.6;\r\n  font-size: 14px;\r\n  font-weight: 300;\r\n`;\r\n\r\nconst HoursContainer = styled.div`\r\n  @media screen and (max-width: 1023px) {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst COLORS = [\r\n  \"#FF8B64\",\r\n  \"#56C2E6\",\r\n  \"#FF5E7D\",\r\n  \"#4BCF83\",\r\n  \"#7235D1\",\r\n  \"#F1C75B\",\r\n];\r\nconst Card = ({ title, timeframes, itemIndex }) => {\r\n  const { currentDataType } = useContext(ContextDataType);\r\n  const cardImageSvg = `/images/icon-${title\r\n    .toLowerCase()\r\n    .replace(` `, \"-\")}.svg`;\r\n  return (\r\n    <Container>\r\n      <CardTop bg={COLORS[itemIndex]}>\r\n        <IconTopRight src={cardImageSvg}></IconTopRight>\r\n      </CardTop>\r\n      <CardBody>\r\n        <CardBodyHeader>\r\n          <Title>{title}</Title>\r\n          <Button>\r\n            <ButtonImage src=\"/images/icon-ellipsis.svg\"></ButtonImage>\r\n          </Button>\r\n        </CardBodyHeader>\r\n        <HoursContainer>\r\n          <Hours>{`${\r\n            timeframes[currentDataType.toLowerCase()].current\r\n          }hrs`}</Hours>\r\n          <SmallText>{`Last Week - ${\r\n            timeframes[currentDataType.toLowerCase()].previous\r\n          }hrs`}</SmallText>\r\n        </HoursContainer>\r\n      </CardBody>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useContext } from \"react\";\r\nimport Context from \"../context/ContextDataType\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CardContainer = styled.article`\r\n  color: white;\r\n  position: relative;\r\n  width: 100%;\r\n  background-color: #1d204b;\r\n  grid-row: 1/3;\r\n  grid-column: 1;\r\n  height: 100%;\r\n  border-radius: 18px;\r\n\r\n  @media screen and (max-width: 1023px) {\r\n    padding-bottom: 2%;\r\n    grid-row: 1/3;\r\n    height: fit-content;\r\n  }\r\n`;\r\n\r\nconst CardUserInfo = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  justify-content: space-around;\r\n  top: 0;\r\n  left: 0;\r\n  padding: 10% 10%;\r\n  width: 80%;\r\n  height: 55%;\r\n  border-radius: 18px;\r\n  background-color: #5746ea;\r\n\r\n  @media screen and (max-width: 1023px) {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    padding: 6% 10%;\r\n    gap: 10%;\r\n  }\r\n`;\r\n\r\nconst CardUserImg = styled.img`\r\n  border-radius: 50%;\r\n  border: 2px solid white;\r\n  width: 40%;\r\n  height: auto;\r\n\r\n  @media screen and (max-width: 1023px) {\r\n    width: 20%;\r\n  }\r\n`;\r\n\r\nconst CardReportText = styled.small`\r\n  font-weight: 400;\r\n  opacity: 0.6;\r\n`;\r\n\r\nconst CardUserName = styled.h1`\r\n  font-weight: 300;\r\n  font-size: 36px;\r\n`;\r\n\r\nconst CardDataSection = styled.div`\r\n  padding: 0 10%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  justify-content: space-evenly;\r\n\r\n  height: 30%;\r\n  @media screen and (max-width: 1023px) {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    padding: 0;\r\n    padding-top: 3%;\r\n  }\r\n`;\r\n\r\nconst CardDataOption = styled.button`\r\n  color: white;\r\n  font-family: \"Rubik\", sans-serif;\r\n  font-weight: 300;\r\n  opacity: ${(props) => props.opacity};\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n  background-color: transparent;\r\n  border: none;\r\n  @media screen and (max-width: 1023px) {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n  }\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst TallCard = ({ gridPosition }) => {\r\n  const { currentDataType, setCurrentDataType } = useContext(Context);\r\n\r\n  const temporalChooser = [\"Daily\", \"Weekly\", \"Monthly\"];\r\n  return (\r\n    <CardContainer gridPos={gridPosition}>\r\n      <CardUserInfo>\r\n        <CardUserImg src=\"/images/image-jeremy.png\"></CardUserImg>\r\n        <div>\r\n          <CardReportText>Report for</CardReportText>\r\n          <CardUserName>Jeremy Robson</CardUserName>\r\n        </div>\r\n      </CardUserInfo>\r\n      <CardDataSection>\r\n        {temporalChooser.map((item) => (\r\n          <CardDataOption\r\n            key={item}\r\n            opacity={item === currentDataType ? 1 : 0.6}\r\n            onClick={() => {\r\n              setCurrentDataType(item);\r\n            }}\r\n          >\r\n            {item}\r\n          </CardDataOption>\r\n        ))}\r\n      </CardDataSection>\r\n    </CardContainer>\r\n  );\r\n};\r\n\r\nexport default TallCard;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { testData } from \"../data\";\r\nimport Card from \"./Card\";\r\nimport TallCard from \"./TallCard\";\r\n\r\nconst CardGrid = styled.section`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  grid-template-rows: repeat(2, 1fr);\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n  gap: 1em;\r\n\r\n  @media screen and (max-width: 1023px) {\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: repeat(8, fit-content);\r\n    gap: 1em;\r\n  }\r\n`;\r\n\r\nconst CardContainer = () => {\r\n  return (\r\n    <CardGrid>\r\n      <TallCard></TallCard>\r\n      {testData.map((item, index) => (\r\n        <Card key={item.title} {...item} itemIndex={index}></Card>\r\n      ))}\r\n    </CardGrid>\r\n  );\r\n};\r\n\r\nexport default CardContainer;\r\n","import styled from \"styled-components\";\nimport CardContainer from \"./components/CardContainer\";\nimport { DataTypeProvider } from \"./context/ContextDataType\";\nconst MainBody = styled.main`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #1a202c;\n  height: 52vh;\n  padding: 24vh 14%;\n\n  @media screen and (max-width: 1023px) {\n    min-height: 100vh;\n    padding: 6vh 4%;\n    height: auto;\n  }\n`;\n\nfunction App() {\n  return (\n    <MainBody>\n      <DataTypeProvider>\n        <CardContainer></CardContainer>\n      </DataTypeProvider>\n    </MainBody>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}